$moving-border-color: rgba(255,77,85,0.6);

.navbar {
  position: relative;
  min-height: $navbar-height; // Ensure a navbar always shows (e.g., without a .navbar-brand in collapsed mode)
  margin-bottom: 0px;
  border-top: none;
  border-left: none;
  border-right: none;
  border-bottom: 1px solid transparent;

  // Prevent floats from breaking the navbar
  @include clearfix;

  @media (min-width: $grid-float-breakpoint) {
    border-radius: $navbar-border-radius;
  }
}




//////////////////
// Inverse navbar
//////////////////

.navbar-inverse {
  background-color: $navbar-inverse-bg;
  border-color: $navbar-inverse-border;

  .navbar-brand {
    color: $navbar-inverse-brand-color;
    transition: color 0.25s;
    margin-left: 17.5px !important;
    &::before,
    &::after {
      box-sizing: border-box;
      content: '';
      position: absolute;
      width: 70%;
      height: 70%;
    }
    position: relative;
    vertical-align: middle;
    &:hover {
      color: $navbar-inverse-brand-color;
     }
    /*

    &:hover {
      color: $navbar-inverse-brand-color;
     }
     // Set up base styles, we're going to scale instead of animating width/height
     &::before,
     &::after {
       top: 0;
       left: 0;
       height: 100%;
       width: 100%;
       transform-origin: center; // Ensure scaling is done from the center (expands outwards)
     }

     // scale3d(<scale-horizontal>, <scale-vertical>, <scale-depth>);
     &::before {
       border-bottom: 2px solid $moving-border-color;
       transform: scale3d(0,1,1); // Shrink only width
     }

     &::after {
       transform: scale3d(1,0,1); // Shrink only height
     }


     &:hover::before,
     &:hover::after {
       transform: scale3d(1,1,1); // Show full-size
       transition: transform 0.5s;
     }
     */
  }

  .navbar-text {
    color: $navbar-inverse-color;
  }

  .navbar-nav {

    > li > a {
      color: $navbar-inverse-link-color;
      transition: color 0.25s;
      &::before,
      &::after {
        box-sizing: border-box;
        content: '';
        position: absolute;
        width: 100%;
        height: 100%;
      }
      position: relative;
      vertical-align: middle;

      &:hover,
      &:focus {
        color: $navbar-inverse-brand-color;
        background-color: $navbar-inverse-link-hover-bg;
      }

      // Set up base styles, we're going to scale instead of animating width/height
      &::before,
      &::after {
        top: 0;
        left: 0;
        height: 100%;
        width: 100%;
        transform-origin: center; // Ensure scaling is done from the center (expands outwards)
      }

      // scale3d(<scale-horizontal>, <scale-vertical>, <scale-depth>);
      &::before {
        border-bottom: 2px solid $moving-border-color;
        transform: scale3d(0,1,1); // Shrink only width
      }

      &::after {
        transform: scale3d(1,0,1); // Shrink only height
      }

      &:active::before,
      &:hover::before,
      &:hover::after {
        transform: scale3d(1,1,1); // Show full-size
        transition: transform 0.5s;
      }

    }

    > .active > a {
      &::before {
        border-bottom: 2px solid $moving-border-color;
        transform: scale3d(1,1,1); // Show full-size
      }

      &,
      &:hover,
      &:focus {
        color:  $navbar-inverse-brand-color;
        background-color: $navbar-inverse-link-active-bg;
        transform: scale3d(1,1,1); // Show full-size

      }
    }
    > .disabled > a {
      &,
      &:hover,
      &:focus {
        color: $navbar-inverse-link-disabled-color;
        background-color: $navbar-inverse-link-disabled-bg;
        transform: scale3d(0,1,1); // Shrink only width
      }
    }


  }

  // Darken the responsive nav toggle
  .navbar-toggle {
    border-color: $navbar-inverse-toggle-border-color;
    &:hover,
    &:focus {
      background-color: $navbar-inverse-toggle-hover-bg;
    }
    .icon-bar {
      background-color: $navbar-inverse-toggle-icon-bar-bg;
    }
  }

  .navbar-collapse,
  .navbar-form {
    border-color: darken($navbar-inverse-bg, 7%);
  }

  // Dropdowns
  .navbar-nav {
    > .open > a {
      &,
      &:hover,
      &:focus {
        background-color: $navbar-inverse-link-active-bg;
        color: $navbar-inverse-link-active-color;
      }
    }

    @media (max-width: $grid-float-breakpoint-max) {
      // Dropdowns get custom display
      .open .dropdown-menu {
        > .dropdown-header {
          border-color: $navbar-inverse-border;
        }
        .divider {
          background-color: $navbar-inverse-border;
        }
        > li > a {
          color: $navbar-inverse-link-color;
          &:hover,
          &:focus {
            color: $navbar-inverse-link-hover-color;
            background-color: $navbar-inverse-link-hover-bg;
          }
        }
        > .active > a {
          &,
          &:hover,
          &:focus {
            color: $navbar-inverse-link-active-color;
            background-color: $navbar-inverse-link-active-bg;
          }
        }
        > .disabled > a {
          &,
          &:hover,
          &:focus {
            color: $navbar-inverse-link-disabled-color;
            background-color: $navbar-inverse-link-disabled-bg;
          }
        }
      }
    }
  }

  .navbar-link {
    color: $navbar-inverse-link-color;
    &:hover {
      color: $navbar-inverse-link-hover-color;
    }
  }

  .btn-link {
    color: $navbar-inverse-link-color;
    &:hover,
    &:focus {
      color: $navbar-inverse-link-hover-color;
    }
    &[disabled],
    fieldset[disabled] & {
      &:hover,
      &:focus {
        color: $navbar-inverse-link-disabled-color;
      }
    }
  }
}
